@using BookstoreBlazor.Services;
@using BookstoreDatabase.Entitites;

@page "/ShoppingCart"
@inject CartService CartService
@inject HttpClient http

<h3>ShoppingCart</h3>

@if (CartContents is null)
{
    <p>Page is loading...</p>
} else {
    <div class="container-fluid">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Book Title
                    </th>
                    <th>
                        Book ISBN
                    </th>
                    <th>
                        Publisher Name
                    </th>
                    <th>
                        Price
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in CartContents)
                {
                    <tr>
                        <td>
                            @book.BookTitle
                        </td>
                        <td>
                            @book.BookISBN
                        </td>
                        <td>
                            @book.PublisherName
                        </td>
                        <td>
                            @book.Price
                        </td>
                        <td>
                            @* <a @onclick="@(() => {AddToCart(book.BookId); AddedToCartAlert(book.BookTitle);})" @onclick:preventDefault="true" href="">Add to Cart</a> *@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
@code {
    public List<Book>? CartContents { get; set; }

    private void getCartContents()
    {
        CartContents = CartService.GetProductsFromCart();
    }

    protected override async Task OnInitializedAsync()
    {
        getCartContents();
        await base.OnInitializedAsync();
    }
}
