// <auto-generated />
using System;
using BookstoreDatabase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookstoreDatabase.Migrations
{
    [DbContext(typeof(BookstoreContext))]
    partial class BookstoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookstoreDatabase.Entitites.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("BookISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("PublisherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookISBN = "  9780582330870",
                            BookTitle = "Animal Farm",
                            Price = 9f,
                            PublisherId = 1,
                            PublisherName = "Longman Publishing Group"
                        },
                        new
                        {
                            BookId = 2,
                            BookISBN = "9780345292346",
                            BookTitle = "Fahrenheit 451",
                            Price = 12.85f,
                            PublisherId = 2,
                            PublisherName = "Del Rey Publishing"
                        },
                        new
                        {
                            BookId = 3,
                            BookISBN = "9780061120084",
                            BookTitle = "To Kill a Mockingbird",
                            Price = 13.99f,
                            PublisherId = 3,
                            PublisherName = "J. B. Lippincott & Co."
                        },
                        new
                        {
                            BookId = 4,
                            BookISBN = "9780241950425",
                            BookTitle = "The Catcher in the Rye",
                            Price = 15.95f,
                            PublisherId = 4,
                            PublisherName = "Little Brown & Co Inc"
                        });
                });

            modelBuilder.Entity("BookstoreDatabase.Entitites.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "1234 Not Real lane",
                            City = "Cincinnati",
                            FirstName = "Robert",
                            LastName = "Brown",
                            PostalCode = "45337",
                            State = "Ohio"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "5678 Nowhere place",
                            City = "Cincinnati",
                            FirstName = "Gabriel",
                            LastName = "Comstock",
                            PostalCode = "45212",
                            State = "Ohio"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "910 Someplace street",
                            City = "Cincinnati",
                            FirstName = "Ryan",
                            LastName = "Durham",
                            PostalCode = "45216",
                            State = "Ohio"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "1112 Anywhere ave",
                            City = "Cincinnati",
                            FirstName = "Sheel",
                            LastName = "Patel",
                            PostalCode = "45442",
                            State = "Ohio"
                        });
                });

            modelBuilder.Entity("BookstoreDatabase.Entitites.Order", b =>
                {
                    b.Property<int>("Orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Orderid"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Orderid");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BookstoreDatabase.Entitites.OrderLineItem", b =>
                {
                    b.Property<int>("OrderLineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLineItemId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineItemId");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLineItems");
                });

            modelBuilder.Entity("BookstoreDatabase.Entitites.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            Address = " 1185 Avenue Of The Americas New York, NY 10036",
                            PublisherName = "Longman Publishing Group"
                        },
                        new
                        {
                            PublisherId = 2,
                            Address = "1745 Broadway, New York, New York 10019",
                            PublisherName = "Del Rey Publishing"
                        },
                        new
                        {
                            PublisherId = 3,
                            Address = "227 S. 6th Street in Philadelphia, Pennsylvania",
                            PublisherName = "J. B. Lippincott & Co."
                        },
                        new
                        {
                            PublisherId = 4,
                            Address = "1290 Avenue Of The Americas, Suite 6, New York, NY",
                            PublisherName = "Little Brown & Co Inc"
                        });
                });

            modelBuilder.Entity("BookstoreDatabase.Entitites.Order", b =>
                {
                    b.HasOne("BookstoreDatabase.Entitites.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BookstoreDatabase.Entitites.OrderLineItem", b =>
                {
                    b.HasOne("BookstoreDatabase.Entitites.Book", "BookName")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreDatabase.Entitites.Order", null)
                        .WithMany("OrderLineItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookName");
                });

            modelBuilder.Entity("BookstoreDatabase.Entitites.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BookstoreDatabase.Entitites.Order", b =>
                {
                    b.Navigation("OrderLineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
